{"version":3,"file":"clientSideSmartOrderRouter-47a0fe84.js","sources":["../src/hooks/routing/transformSwapRouteToGetQuoteResult.ts","../src/hooks/routing/clientSideSmartOrderRouter.ts"],"sourcesContent":["import { Protocol } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\n// This file is lazy-loaded, so the import of smart-order-router is intentional.\n// eslint-disable-next-line no-restricted-imports\nimport { routeAmountsToString, SwapRoute } from '@uniswap/smart-order-router'\nimport { GetQuoteResult, V2PoolInRoute, V3PoolInRoute } from 'state/routing/types'\n\n// from routing-api (https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/quote.ts#L243-L311)\nexport function transformSwapRouteToGetQuoteResult(\n  type: 'exactIn' | 'exactOut',\n  amount: CurrencyAmount<Currency>,\n  {\n    quote,\n    quoteGasAdjusted,\n    route,\n    estimatedGasUsed,\n    estimatedGasUsedQuoteToken,\n    estimatedGasUsedUSD,\n    gasPriceWei,\n    methodParameters,\n    blockNumber,\n  }: SwapRoute\n): GetQuoteResult {\n  const routeResponse: Array<V3PoolInRoute[] | V2PoolInRoute[]> = []\n\n  for (const subRoute of route) {\n    const { amount, quote, tokenPath } = subRoute\n\n    if (subRoute.protocol === Protocol.V3) {\n      const pools = subRoute.route.pools\n      const curRoute: V3PoolInRoute[] = []\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i]\n        const tokenIn = tokenPath[i]\n        const tokenOut = tokenPath[i + 1]\n\n        let edgeAmountIn = undefined\n        if (i === 0) {\n          edgeAmountIn = type === 'exactIn' ? amount.quotient.toString() : quote.quotient.toString()\n        }\n\n        let edgeAmountOut = undefined\n        if (i === pools.length - 1) {\n          edgeAmountOut = type === 'exactIn' ? quote.quotient.toString() : amount.quotient.toString()\n        }\n\n        curRoute.push({\n          type: 'v3-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          fee: nextPool.fee.toString(),\n          liquidity: nextPool.liquidity.toString(),\n          sqrtRatioX96: nextPool.sqrtRatioX96.toString(),\n          tickCurrent: nextPool.tickCurrent.toString(),\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n\n      routeResponse.push(curRoute)\n    } else if (subRoute.protocol === Protocol.V2) {\n      const pools = subRoute.route.pairs\n      const curRoute: V2PoolInRoute[] = []\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i]\n        const tokenIn = tokenPath[i]\n        const tokenOut = tokenPath[i + 1]\n\n        let edgeAmountIn = undefined\n        if (i === 0) {\n          edgeAmountIn = type === 'exactIn' ? amount.quotient.toString() : quote.quotient.toString()\n        }\n\n        let edgeAmountOut = undefined\n        if (i === pools.length - 1) {\n          edgeAmountOut = type === 'exactIn' ? quote.quotient.toString() : amount.quotient.toString()\n        }\n\n        const reserve0 = nextPool.reserve0\n        const reserve1 = nextPool.reserve1\n\n        curRoute.push({\n          type: 'v2-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          reserve0: {\n            token: {\n              chainId: reserve0.currency.wrapped.chainId,\n              decimals: reserve0.currency.wrapped.decimals,\n              address: reserve0.currency.wrapped.address,\n              symbol: reserve0.currency.wrapped.symbol,\n            },\n            quotient: reserve0.quotient.toString(),\n          },\n          reserve1: {\n            token: {\n              chainId: reserve1.currency.wrapped.chainId,\n              decimals: reserve1.currency.wrapped.decimals,\n              address: reserve1.currency.wrapped.address,\n              symbol: reserve1.currency.wrapped.symbol,\n            },\n            quotient: reserve1.quotient.toString(),\n          },\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n\n      routeResponse.push(curRoute)\n    }\n  }\n\n  const result: GetQuoteResult = {\n    methodParameters,\n    blockNumber: blockNumber.toString(),\n    amount: amount.quotient.toString(),\n    amountDecimals: amount.toExact(),\n    quote: quote.quotient.toString(),\n    quoteDecimals: quote.toExact(),\n    quoteGasAdjusted: quoteGasAdjusted.quotient.toString(),\n    quoteGasAdjustedDecimals: quoteGasAdjusted.toExact(),\n    gasUseEstimateQuote: estimatedGasUsedQuoteToken.quotient.toString(),\n    gasUseEstimateQuoteDecimals: estimatedGasUsedQuoteToken.toExact(),\n    gasUseEstimate: estimatedGasUsed.toString(),\n    gasUseEstimateUSD: estimatedGasUsedUSD.toExact(),\n    gasPriceWei: gasPriceWei.toString(),\n    route: routeResponse,\n    routeString: routeAmountsToString(route),\n  }\n\n  return result\n}\n","import { BigintIsh, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core'\n// This file is lazy-loaded, so the import of smart-order-router is intentional.\n// eslint-disable-next-line no-restricted-imports\nimport { AlphaRouter, AlphaRouterConfig, AlphaRouterParams, ChainId } from '@uniswap/smart-order-router'\nimport JSBI from 'jsbi'\nimport { GetQuoteResult } from 'state/routing/types'\n\nimport { transformSwapRouteToGetQuoteResult } from './transformSwapRouteToGetQuoteResult'\n\nexport const AUTO_ROUTER_SUPPORTED_CHAINS: ChainId[] = Object.values(ChainId).filter((chainId): chainId is ChainId =>\n  Number.isInteger(chainId)\n)\n\nasync function getQuote(\n  {\n    type,\n    chainId,\n    tokenIn,\n    tokenOut,\n    amount: amountRaw,\n  }: {\n    type: 'exactIn' | 'exactOut'\n    chainId: ChainId\n    tokenIn: { address: string; chainId: number; decimals: number; symbol?: string }\n    tokenOut: { address: string; chainId: number; decimals: number; symbol?: string }\n    amount: BigintIsh\n  },\n  routerParams: AlphaRouterParams,\n  routerConfig: Partial<AlphaRouterConfig>\n): Promise<{ data: GetQuoteResult; error?: unknown }> {\n  const router = new AlphaRouter(routerParams)\n\n  const currencyIn = new Token(tokenIn.chainId, tokenIn.address, tokenIn.decimals, tokenIn.symbol)\n  const currencyOut = new Token(tokenOut.chainId, tokenOut.address, tokenOut.decimals, tokenOut.symbol)\n\n  const baseCurrency = type === 'exactIn' ? currencyIn : currencyOut\n  const quoteCurrency = type === 'exactIn' ? currencyOut : currencyIn\n  const amount = CurrencyAmount.fromRawAmount(baseCurrency, JSBI.BigInt(amountRaw))\n\n  const swapRoute = await router.route(\n    amount,\n    quoteCurrency,\n    type === 'exactIn' ? TradeType.EXACT_INPUT : TradeType.EXACT_OUTPUT,\n    /*swapConfig=*/ undefined,\n    routerConfig\n  )\n\n  if (!swapRoute) throw new Error('Failed to generate client side quote')\n\n  return { data: transformSwapRouteToGetQuoteResult(type, amount, swapRoute) }\n}\n\ninterface QuoteArguments {\n  tokenInAddress: string\n  tokenInChainId: ChainId\n  tokenInDecimals: number\n  tokenInSymbol?: string\n  tokenOutAddress: string\n  tokenOutChainId: ChainId\n  tokenOutDecimals: number\n  tokenOutSymbol?: string\n  amount: string\n  type: 'exactIn' | 'exactOut'\n}\n\nexport async function getClientSideQuote(\n  {\n    tokenInAddress,\n    tokenInChainId,\n    tokenInDecimals,\n    tokenInSymbol,\n    tokenOutAddress,\n    tokenOutChainId,\n    tokenOutDecimals,\n    tokenOutSymbol,\n    amount,\n    type,\n  }: QuoteArguments,\n  routerParams: AlphaRouterParams,\n  routerConfig: Partial<AlphaRouterConfig>\n) {\n  return getQuote(\n    {\n      type,\n      chainId: tokenInChainId,\n      tokenIn: {\n        address: tokenInAddress,\n        chainId: tokenInChainId,\n        decimals: tokenInDecimals,\n        symbol: tokenInSymbol,\n      },\n      tokenOut: {\n        address: tokenOutAddress,\n        chainId: tokenOutChainId,\n        decimals: tokenOutDecimals,\n        symbol: tokenOutSymbol,\n      },\n      amount,\n    },\n    routerParams,\n    routerConfig\n  )\n}\n"],"names":["transformSwapRouteToGetQuoteResult","type","amount","quote","quoteGasAdjusted","route","estimatedGasUsed","estimatedGasUsedQuoteToken","estimatedGasUsedUSD","gasPriceWei","methodParameters","blockNumber","routeResponse","subRoute","tokenPath","protocol","Protocol","V3","pools","curRoute","i","length","nextPool","tokenIn","tokenOut","edgeAmountIn","undefined","quotient","toString","edgeAmountOut","push","chainId","decimals","address","symbol","fee","liquidity","sqrtRatioX96","tickCurrent","amountIn","amountOut","V2","pairs","reserve0","reserve1","token","currency","wrapped","result","amountDecimals","toExact","quoteDecimals","quoteGasAdjustedDecimals","gasUseEstimateQuote","gasUseEstimateQuoteDecimals","gasUseEstimate","gasUseEstimateUSD","routeString","routeAmountsToString","AUTO_ROUTER_SUPPORTED_CHAINS","Object","values","ChainId","filter","Number","isInteger","getQuote","routerParams","routerConfig","amountRaw","router","AlphaRouter","currencyIn","Token","currencyOut","baseCurrency","quoteCurrency","CurrencyAmount","fromRawAmount","JSBI","BigInt","TradeType","EXACT_INPUT","EXACT_OUTPUT","swapRoute","Error","data","getClientSideQuote","tokenInAddress","tokenInChainId","tokenInDecimals","tokenInSymbol","tokenOutAddress","tokenOutChainId","tokenOutDecimals","tokenOutSymbol"],"mappings":"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"}